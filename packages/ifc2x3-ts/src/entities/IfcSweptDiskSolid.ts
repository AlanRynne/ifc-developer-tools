// This file was generated automatically using "ifc-syntax-codegen"
//
// Licensed under MIT by Alan Rynne
//
// Contains the following entities:
//    - IfcSweptDiskSolid

import { IfcCurve, IfcSolidModel } from './'
import { IfcPositiveLengthMeasure, IfcParameterValue } from '../types'

/** An IfcSweptDiskSolid represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space
 *
 * The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix.
 *
 * Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam
 *
 * If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments.
 *
 * Informal proposition restricts the permissible angle between two non-tangent continuous segments
 *
 * Figure 358 illustrates an example
 *
 * Informal Propositions:
 */
 class IfcSweptDiskSolid extends IfcSolidModel {
    constructor(Directrix:IfcCurve, Radius:IfcPositiveLengthMeasure, InnerRadius:IfcPositiveLengthMeasure, StartParam:IfcParameterValue, EndParam:IfcParameterValue) {
        super()
        this.Directrix = Directrix
        this.Radius = Radius
        this.InnerRadius = InnerRadius
        this.StartParam = StartParam
        this.EndParam = EndParam
    }
    /** The curve used to define the sweeping operation.
     * The solid is generated by sweeping a circular disk along the Directrix.
    */
    Directrix: IfcCurve
    /** The Radius of the circular disk to be swept along the directrix.
     * Denotes the outer radius, if an InnerRadius is applied.
    */
    Radius: IfcPositiveLengthMeasure
    /** This attribute is optional, if present it defines the radius of a circular hole in the centre of the disk.
    */
    InnerRadius?: IfcPositiveLengthMeasure
    /** The parameter value on the Directrix at which the sweeping operation commences.
     * If no value is provided the start of the sweeping operation is at the start of the Directrix.. IFC4 CHANGE The attribute has been changed to OPTIONAL with upward compatibility for file-based exchange.
    */
    StartParam: IfcParameterValue
    /** The parameter value on the Directrix at which the sweeping operation ends.
     * If no value is provided the end of the sweeping operation is at the end of the Directrix.. IFC4 CHANGE The attribute has been changed to OPTIONAL with upward compatibility for file-based exchange.
    */
    EndParam: IfcParameterValue
}

export default IfcSweptDiskSolid